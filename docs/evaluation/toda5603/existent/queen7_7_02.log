c model ISR_TJ
c  /home/toda/src/NuSMV-2.6.0-Linux_untouched/binary/bin/NuSMV -bmc -bmc_length 20 -n 0 /home/toda/2022solver/bin/../tmp/queen7_7_02.smv > queen7_7_02.log
c ECC Heuristic Algorithm by Alessio Conte, Roberto Grossi and Andrea Marino. University of Pisa.
c This code is compiled using Java 1.8
c Parsing: 49
c Reading graph from file..
c Removing duplicates.................
c Done.
c Algotithm object created, class=it.unipi.di.clq.eps.lists.EPSc
c Edges: 476
c 0 cliques
c 2 cliques
c 4 cliques
c 8 cliques
c 16 cliques
c 32 cliques
c The solution is correct.
c Cliques: 40
c Sum: 214
c MaxSize: 0
c Time: 21
c Aborted: false
c ML = 48
c SIZE = 49
c Removed 4 cliques to minimalize solution.
c Result saved!
c Clique size distribution: {[2,3][3,3][4,5][5,5][6,4][7,16]}
c NODE covering index distribution:{[3,4][4,41][5,4]}
c EDGE covering index distrubution:{[1,464][2,12]}
c Total edges:476
c Distributions saved!
c *** This is NuSMV 2.6.0 (compiled on Wed Oct 14 15:36:56 2015)
c *** Enabled addons are: compass
c *** For more information on NuSMV see <http://nusmv.fbk.eu>
c *** or email to <nusmv-users@list.fbk.eu>.
c *** Please report bugs to <Please report bugs to <nusmv-users@fbk.eu>>
c 
c *** Copyright (c) 2010-2014, Fondazione Bruno Kessler
c 
c *** This version of NuSMV is linked to the CUDD library version 2.4.1
c *** Copyright (c) 1995-2004, Regents of the University of Colorado
c 
c *** This version of NuSMV is linked to the MiniSat SAT solver. 
c *** See http://minisat.se/MiniSat.html
c *** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
c *** Copyright (c) 2007-2010, Niklas Sorensson
c 
c -- no counterexample found with bound 0
c -- no counterexample found with bound 1
c -- no counterexample found with bound 2
c -- no counterexample found with bound 3
c -- no counterexample found with bound 4
c -- no counterexample found with bound 5
c -- no counterexample found with bound 6
c -- no counterexample found with bound 7
c -- specification  G ((((((state.token[1] = v5 & state.token[2] = v10) & state.token[3] = v15) & state.token[4] = v25) & state.token[5] = v35) & state.token[6] = v44) ->  G !((((((((((state.token[1] = v5 | state.token[1] = v9) | state.token[1] = v18) | state.token[1] = v22) | state.token[1] = v35) | state.token[1] = v45) & (((((state.token[2] = v5 | state.token[2] = v9) | state.token[2] = v18) | state.token[2] = v22) | state.token[2] = v35) | state.token[2] = v45)) & (((((state.token[3] = v5 | state.token[3] = v9) | state.token[3] = v18) | state.token[3] = v22) | state.token[3] = v35) | state.token[3] = v45)) & (((((state.token[4] = v5 | state.token[4] = v9) | state.token[4] = v18) | state.token[4] = v22) | state.token[4] = v35) | state.token[4] = v45)) & (((((state.token[5] = v5 | state.token[5] = v9) | state.token[5] = v18) | state.token[5] = v22) | state.token[5] = v35) | state.token[5] = v45)) & (((((state.token[6] = v5 | state.token[6] = v9) | state.token[6] = v18) | state.token[6] = v22) | state.token[6] = v35) | state.token[6] = v45)))    is false
c -- as demonstrated by the following execution sequence
c Trace Description: BMC Counterexample 
c Trace Type: Counterexample 
c   -> State: 1.1 <-
c     state.token[1] = 0ud36_1073774880
c     state.token[2] = 0ud36_8657051656
c     state.token[3] = 0ud36_36508271616
c     state.token[4] = 0ud36_21487419392
c     state.token[5] = 0ud36_33559168
c     state.token[6] = 0ud36_268503042
c     state.tid = 1
c     state.vid = 48
c     state.target = 0ud36_0
c     v49 = 0ud36_310378496
c     v48 = 0ud36_269221889
c     v47 = 0ud36_2415955968
c     v46 = 0ud36_4565516288
c     v45 = 0ud36_285220868
c     v44 = 0ud36_268503042
c     v43 = 0ud36_17449353216
c     v42 = 0ud36_8757706753
c     v41 = 0ud36_142872576
c     v40 = 0ud36_136871936
c     v39 = 0ud36_6593445888
c     v38 = 0ud36_134244352
c     v37 = 0ud36_17314152452
c     v36 = 0ud36_135397378
c     v35 = 0ud36_33559168
c     v34 = 0ud36_8592294016
c     v33 = 0ud36_25202816
c     v32 = 0ud36_4295493760
c     v31 = 0ud36_19327361152
c     v30 = 0ud36_213120
c     v29 = 0ud36_1048740
c     v28 = 0ud36_39845904
c     v27 = 0ud36_21234176
c     v26 = 0ud36_8594163712
c     v25 = 0ud36_21487419392
c     v24 = 0ud36_4857856
c     v23 = 0ud36_2151743520
c     v22 = 0ud36_5259272
c     v21 = 0ud36_34410070272
c     v20 = 0ud36_34896873488
c     v19 = 0ud36_51539640832
c     v18 = 0ud36_47244771328
c     v17 = 0ud36_34368135200
c     v16 = 0ud36_34360328200
c     v15 = 0ud36_36508271616
c     v14 = 0ud36_637536256
c     v13 = 0ud36_17784111360
c     v12 = 0ud36_604143632
c     v11 = 0ud36_4362076704
c     v10 = 0ud36_8657051656
c     v9 = 0ud36_75564032
c     v8 = 0ud36_68681792
c     v7 = 0ud36_18287165440
c     v6 = 0ud36_1611005952
c     v5 = 0ud36_1073774880
c     v4 = 0ud36_5368709144
c     v3 = 0ud36_1073751552
c     v2 = 0ud36_9663742016
c     v1 = 0ud36_1083179008
c     v0 = 0ud36_0
c   -> State: 1.2 <-
c     state.tid = 6
c     state.vid = 36
c     state.target = 0ud36_269221889
c   -> State: 1.3 <-
c     state.token[6] = 0ud36_269221889
c     state.tid = 3
c     state.vid = 20
c     state.target = 0ud36_135397378
c   -> State: 1.4 <-
c     state.token[3] = 0ud36_135397378
c     state.tid = 6
c     state.vid = 45
c     state.target = 0ud36_34896873488
c   -> State: 1.5 <-
c     state.token[6] = 0ud36_34896873488
c     state.tid = 2
c     state.vid = 9
c     state.target = 0ud36_285220868
c   -> State: 1.6 <-
c     state.token[2] = 0ud36_285220868
c     state.tid = 4
c     state.vid = 22
c     state.target = 0ud36_75564032
c   -> State: 1.7 <-
c     state.token[4] = 0ud36_75564032
c     state.tid = 3
c     state.vid = 18
c     state.target = 0ud36_5259272
c   -> State: 1.8 <-
c     state.token[3] = 0ud36_5259272
c     state.tid = 6
c     state.vid = 1
c     state.target = 0ud36_47244771328
c   -> State: 1.9 <-
c     state.token[6] = 0ud36_47244771328
c     state.tid = 1
c     state.target = 0ud36_1083179008
s 6 10 15 25 40 44
t 5 9 18 22 35 45
a YES
a 6 10 15 25 40 44
a 10 15 25 35 40 44
a 5 10 15 25 35 44
a 5 10 15 25 35 48
a 5 10 25 35 36 48
a 5 10 20 25 35 36
a 5 20 25 35 36 45
a 5 9 20 35 36 45
a 5 9 20 22 35 45
a 5 9 18 22 35 45
